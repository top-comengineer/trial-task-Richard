// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
}

// Necessary for Next auth
// model Session {
//     id           String   @id @default(cuid())
//     sessionToken String   @unique
//     userId       String
//     expires      DateTime
//     user         User     @relation(fields: [userId], references: [user_id], onDelete: Cascade)
// }

model User {
    user_id       Int  @id @default(autoincrement())
    email         String   @unique
    // emailVerified DateTime?
    // image         String?
    // accounts      Account[]
    password      String
    address       String
    // sessions      Session[]
    layouts       Layout[]
}

model Layout {
    layout_id    Int  @id @default(autoincrement())
    user_id      Int
    user         User      @relation(fields: [user_id], references: [user_id], onDelete: Cascade)
    layout_name  String
    widgets     Widget[]    @relation("LayoutWidgets")
    layoutsWidgets LayoutsWidgets[]
}

model Widget {
    widget_id          Int  @id @default(autoincrement())
    widget_name        String
    widget_description String?
    layouts            Layout[]  @relation("LayoutWidgets")
    layoutsWidgets LayoutsWidgets[]
}

model LayoutsWidgets {
    layout_id  Int
    widget_id  Int
    layout     Layout   @relation(fields: [layout_id], references: [layout_id])
    widget     Widget   @relation(fields: [widget_id], references: [widget_id])

    @@id([layout_id, widget_id])

}
